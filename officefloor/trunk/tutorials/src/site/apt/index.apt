				       ------------------
				            Tutorials
				       ------------------
				      Daniel Sagenschneider
				       ------------------
  
  <<Tutorials>>
  
  The tutorials cover various features and capabilities of OfficeFloor.
  
  All tutorials have respective sources that can be downloaded and run with {{{http://maven.apache.org}Maven}}.  To view and run the tutorials within an IDE, use the appropriate Maven setup for the IDE (for example run <<<mvn eclipse:eclipse>>> to use within Eclipse).

  
  
WoOF (Web on OfficeFloor)

  The following tutorials cover the basics of using WoOF (Web on OfficeFloor) for building web applications.

*----------------------------------------------------------+-----------------------------------------------------------+
|| Tutorial                                                || Description                                             
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./StaticHttpServer/index.html}Static HTTP server}}    | Illustrates the jar layout of WoOF (Web on OfficeFloor).
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./DynamicHttpServer/index.html}Dynamic web page}}  | Rendering of dynamic content.
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./PageFlowHttpServer/index.html}Interactive web page}}  | Handling of requests to provide interactive pages.
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./NavigateHttpServer/index.html}Navigate between pages}}  | Navigation between pages.
*----------------------------------------------------------+-----------------------------------------------------------+



WoOF running within a JEE Servlet Container

  Explans how to make use of WoOF within a JEE Servlet Container.

*----------------------------------------------------------+-----------------------------------------------------------+
|| Tutorial                                                || Description                                             
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./ServletFilterWebApplication/index.html}Running within Servlet Container}}  | Running the above web functionality within a JEE Servlet container.
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./ServletFilterDependencyInjection/index.html}Utilising dependency injection of the Servlet Container}}  | Use of Servlet container dependency injection (e.g. making use of EJBs).
*----------------------------------------------------------+-----------------------------------------------------------+



Services

  The following tutorials focus on providing services when using WoOF outside of a JEE Servlet Container.
  
  Please note that current focus has been on running WoOF within a JEE Servlet Container and making use of the JEE application container services (e.g. EJBs).  As {{{http://java.sun.com/products/ejb/docs.html}EJB 3}} has now simplified creating and using managed services (EJBs), WoOF has focused on re-using this capability - especially as it allows re-use of existing EJBs.  Also the use of services outside the JEE Servlet Container is still in alpha and under development - OfficeFloor does actually provide the functionality but it is still alpha as the graphical configuration is currently under development for integrating these with WoOF.

*----------------------------------------------------------+-----------------------------------------------------------+
|| Tutorial                                                || Description                                             
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./DatabaseHttpServer/index.html}Dependency injection for functionality}}  | HTTP Server with dependency injection.
*----------------------------------------------------------+-----------------------------------------------------------+



Threading

  OfficeFloor provides the ability for multi-threaded services.
  
  Again current focus has been on running within a JEE Servlet Container which assumes a single thread for servicing each request - due to the typical heavy reliance on ThreadLocal variables.  OfficeFloor at is foundation is a multi-threaded container that does not have this constraint.  As focus has been on running within a JEE Servlet Container the integration of multi-threading for WoOF is still in alpha (possible to manually code but no graphical configuration yet available for this feature - though watch this space).

*----------------------------------------------------------+-----------------------------------------------------------+
|| Tutorial                                                || Description                                             
*----------------------------------------------------------+-----------------------------------------------------------+
| {{{./TeamHttpServer/index.html}Team allocation within HTTP server}}  | HTTP Server with assignment of team to execute tasks.  A Team within OfficeFloor is in effect a thread pool and is the means to assign specific threads (thread pools) to execute specific tasks.
*----------------------------------------------------------+-----------------------------------------------------------+



Future Features

  Current focus of features being developed (or documented as tutorials) can be found at {{{http://sourceforge.net/tracker/?func=browse&group_id=156349&atid=799429&status=1}OfficeFloor features}}.

