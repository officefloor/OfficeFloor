<desk>
  <external-managed-objects>
    <external-managed-object name="HTTP" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" x="668" y="357"/>
  </external-managed-objects>
  <managed-object-sources>
    <managed-object-source name="Http load DeliveredProducts" source="net.officefloor.plugin.web.http.parameters.source.HttpParametersLoaderManagedObjectSource" object-type="net.officefloor.example.weborchestration.deliver.DeliveredProducts" timeout="0" x="398" y="551">
      <properties>
        <property name="type.name" value="net.officefloor.example.weborchestration.deliver.DeliveredProducts"/>
      </properties>
    </managed-object-source>
    <managed-object-source name="DeliveredProducts" source="net.officefloor.plugin.managedobject.clazz.ClassManagedObjectSource" object-type="net.officefloor.example.weborchestration.deliver.DeliveredProducts" timeout="0" x="649" y="554">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.deliver.DeliveredProducts"/>
      </properties>
    </managed-object-source>
  </managed-object-sources>
  <managed-objects>
    <managed-object name="Http load DeliveredProducts" scope="PROCESS" x="371" y="488">
      <managed-object-source name="Http load DeliveredProducts"/>
      <dependency name="SERVER_HTTP_CONNECTION" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection">
        <external-managed-object name="HTTP"/>
      </dependency>
      <dependency name="OBJECT" object-type="net.officefloor.example.weborchestration.deliver.DeliveredProducts">
        <managed-object name="DeliveredProducts"/>
      </dependency>
    </managed-object>
    <managed-object name="DeliveredProducts" scope="PROCESS" x="628" y="519">
      <managed-object-source name="DeliveredProducts"/>
    </managed-object>
  </managed-objects>
  <external-flows>
    <external-flow name="Cancel" argument-type="java.lang.Void" x="745" y="205"/>
    <external-flow name="Delivered" argument-type="java.lang.Void" x="762" y="268"/>
    <external-flow name="Display" argument-type="java.lang.Void" x="739" y="54"/>
    <external-flow name="Exception" argument-type="java.lang.Exception" x="735" y="126"/>
  </external-flows>
  <works>
    <work name="HttpTemplate-deliverProducts.ofp" source="net.officefloor.plugin.web.http.template.HttpTemplateWorkSource" x="233" y="293">
      <properties>
        <property name="template.path" value="net/officefloor/example/weborchestration/deliver/deliverProducts.ofp"/>
        <property name="bean.Product" value="net.officefloor.example.weborchestration.deliver.ProductDelivery"/>
      </properties>
      <work-task name="Product">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
        <task-object name="OBJECT" key="" object-type="net.officefloor.example.weborchestration.deliver.ProductDelivery" parameter="true">
        </task-object>
      </work-task>
      <work-task name="ProductsDelivered">
        <task-object name="0" key="" object-type="net.officefloor.plugin.web.http.template.RequestHandlerTask$RequestHandlerIdentifier" parameter="true">
        </task-object>
      </work-task>
      <work-task name="Tail">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
      </work-task>
      <work-task name="index">
        <task-object name="0" key="" object-type="net.officefloor.plugin.web.http.template.RequestHandlerTask$RequestHandlerIdentifier" parameter="true">
        </task-object>
      </work-task>
      <work-task name="template">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
      </work-task>
    </work>
    <work name="ProductsDeliverer" source="net.officefloor.plugin.work.clazz.ClassWorkSource" x="24" y="458">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.deliver.ProductsDeliverer"/>
      </properties>
      <work-task name="deliverProducts">
        <task-object name="DeliveredProducts" key="" object-type="net.officefloor.example.weborchestration.deliver.DeliveredProducts" parameter="false">
          <managed-object name="Http load DeliveredProducts"/>
        </task-object>
      </work-task>
      <work-task name="displayProductCatalog">
        <task-object name="ProductDelivery[]" key="" object-type="[Lnet.officefloor.example.weborchestration.deliver.ProductDelivery;" parameter="true">
        </task-object>
      </work-task>
      <work-task name="obtainProducts">
      </work-task>
    </work>
  </works>
  <tasks>
    <task name="Product" public="false" work="HttpTemplate-deliverProducts.ofp" task="Product" return-type="" x="383" y="142">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="ProductsDelivered" public="false" work="HttpTemplate-deliverProducts.ofp" task="ProductsDelivered" return-type="" x="26" y="185">
      <next-task name="deliverProducts"/>
    </task>
    <task name="Tail" public="false" work="HttpTemplate-deliverProducts.ofp" task="Tail" return-type="" x="390" y="205">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="deliverProducts" public="false" work="ProductsDeliverer" task="deliverProducts" return-type="" x="175" y="190">
      <task-flow name="deliverySuccessful" key="" argument-type="">
        <external-flow name="Delivered" link="SEQUENTIAL"/>
      </task-flow>
      <task-flow name="invalidDelivery" key="" argument-type="[Lnet.officefloor.example.weborchestration.deliver.ProductDelivery;">
        <task name="displayProductCatalog" link="SEQUENTIAL"/>
      </task-flow>
    </task>
    <task name="displayProductCatalog" public="false" work="ProductsDeliverer" task="displayProductCatalog" return-type="" x="201" y="59">
      <task-flow name="displayHead" key="" argument-type="">
        <task name="template" link="PARALLEL"/>
      </task-flow>
      <task-flow name="displayProductDelivery" key="" argument-type="net.officefloor.example.weborchestration.deliver.ProductDelivery">
        <task name="Product" link="PARALLEL"/>
      </task-flow>
      <task-flow name="displayTail" key="" argument-type="">
        <task name="Tail" link="PARALLEL"/>
      </task-flow>
      <next-external-flow name="Display"/>
    </task>
    <task name="index" public="false" work="HttpTemplate-deliverProducts.ofp" task="index" return-type="" x="643" y="214">
      <next-external-flow name="Cancel"/>
    </task>
    <task name="obtainProducts" public="true" work="ProductsDeliverer" task="obtainProducts" return-type="[Lnet.officefloor.example.weborchestration.deliver.ProductDelivery;" x="18" y="62">
      <next-task name="displayProductCatalog"/>
    </task>
    <task name="template" public="false" work="HttpTemplate-deliverProducts.ofp" task="template" return-type="" x="378" y="79">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
  </tasks>
</desk>