<desk>
  <external-managed-objects>
    <external-managed-object name="HTTP" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" x="793" y="420"/>
    <external-managed-object name="HttpSessionCustomer" object-type="net.officefloor.plugin.socket.server.http.session.object.HttpSessionObject" x="710" y="527"/>
  </external-managed-objects>
  <managed-object-sources>
    <managed-object-source name="CustomerDetails" source="net.officefloor.plugin.managedobject.clazz.ClassManagedObjectSource" object-type="net.officefloor.example.weborchestration.login.CustomerDetails" timeout="0" x="734" y="325">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.login.CustomerDetails"/>
      </properties>
    </managed-object-source>
    <managed-object-source name="HttpLoadCustomerDetails" source="net.officefloor.plugin.socket.server.http.parameters.source.HttpParametersLoaderManagedObjectSource" object-type="net.officefloor.example.weborchestration.login.CustomerDetails" timeout="0" x="508" y="330">
      <properties>
        <property name="type.name" value="net.officefloor.example.weborchestration.login.CustomerDetails"/>
      </properties>
    </managed-object-source>
  </managed-object-sources>
  <managed-objects>
    <managed-object name="CustomerDetails" scope="PROCESS" x="712" y="282">
      <managed-object-source name="CustomerDetails"/>
    </managed-object>
    <managed-object name="HttpLoadCustomerDetails" scope="PROCESS" x="499" y="263">
      <managed-object-source name="HttpLoadCustomerDetails"/>
      <dependency name="SERVER_HTTP_CONNECTION" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection">
        <external-managed-object name="HTTP"/>
      </dependency>
      <dependency name="OBJECT" object-type="net.officefloor.example.weborchestration.login.CustomerDetails">
        <managed-object name="CustomerDetails"/>
      </dependency>
    </managed-object>
  </managed-objects>
  <external-flows>
    <external-flow name="CustomerCreated" argument-type="net.officefloor.example.weborchestration.Customer" x="632" y="206"/>
    <external-flow name="Displayed" argument-type="java.lang.Void" x="655" y="89"/>
    <external-flow name="Exception" argument-type="java.lang.Exception" x="650" y="141"/>
  </external-flows>
  <works>
    <work name="CustomerCreator" source="net.officefloor.plugin.work.clazz.ClassWorkSource" x="207" y="307">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.login.CustomerCreator"/>
      </properties>
      <work-task name="createCustomer">
        <task-object name="CustomerDetails" key="" object-type="net.officefloor.example.weborchestration.login.CustomerDetails" parameter="false">
          <managed-object name="HttpLoadCustomerDetails"/>
        </task-object>
        <task-object name="HttpSessionObject" key="" object-type="net.officefloor.plugin.socket.server.http.session.object.HttpSessionObject" parameter="false">
          <external-managed-object name="HttpSessionCustomer"/>
        </task-object>
      </work-task>
      <work-task name="transformCustomerExistsException">
        <task-object name="CustomerExistsException" key="" object-type="net.officefloor.example.weborchestration.CustomerExistsException" parameter="true">
        </task-object>
      </work-task>
    </work>
    <work name="HttpTemplate-createCustomer.ofp" source="net.officefloor.plugin.socket.server.http.template.HttpTemplateWorkSource" x="54" y="449">
      <properties>
        <property name="template.path" value="net/officefloor/example/weborchestration/login/createCustomer.ofp"/>
        <property name="bean.template" value="net.officefloor.example.weborchestration.login.CustomerDetails"/>
      </properties>
      <work-task name="CreateCustomer">
        <task-object name="0" key="" object-type="net.officefloor.plugin.socket.server.http.template.RequestHandlerTask$RequestHandlerIdentifier" parameter="true">
        </task-object>
      </work-task>
      <work-task name="template">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
        <task-object name="OBJECT" key="" object-type="net.officefloor.example.weborchestration.login.CustomerDetails" parameter="true">
        </task-object>
      </work-task>
    </work>
  </works>
  <tasks>
    <task name="CreateCustomer" public="false" work="HttpTemplate-createCustomer.ofp" task="CreateCustomer" return-type="" x="123" y="187">
      <next-task name="GenerateCustomer"/>
    </task>
    <task name="GenerateCustomer" public="false" work="CustomerCreator" task="createCustomer" return-type="net.officefloor.example.weborchestration.Customer" x="294" y="185">
      <task-flow name="customerNotCreated" key="" argument-type="net.officefloor.example.weborchestration.login.CustomerDetails">
        <task name="createCustomer" link="SEQUENTIAL"/>
      </task-flow>
      <next-external-flow name="CustomerCreated"/>
      <task-escalation escalation-type="net.officefloor.example.weborchestration.CustomerExistsException">
        <task name="transformCustomerExistsException"/>
      </task-escalation>
    </task>
    <task name="createCustomer" public="true" work="HttpTemplate-createCustomer.ofp" task="template" return-type="" x="27" y="104">
      <next-external-flow name="Displayed"/>
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="transformCustomerExistsException" public="false" work="CustomerCreator" task="transformCustomerExistsException" return-type="net.officefloor.example.weborchestration.login.CustomerDetails" x="163" y="46">
      <next-task name="createCustomer"/>
    </task>
  </tasks>
</desk>