<desk>
  <external-managed-objects>
    <external-managed-object name="CustomerSessionObject" object-type="net.officefloor.example.weborchestration.Customer" x="653" y="363"/>
    <external-managed-object name="HTTP" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" x="669" y="549"/>
  </external-managed-objects>
  <managed-object-sources>
    <managed-object-source name="HttpLoadProductsSelected" source="net.officefloor.plugin.socket.server.http.parameters.source.HttpParametersLoaderManagedObjectSource" object-type="net.officefloor.example.weborchestration.products.ProductsSelected" timeout="0" x="502" y="301">
      <properties>
        <property name="type.name" value="net.officefloor.example.weborchestration.products.ProductsSelected"/>
      </properties>
    </managed-object-source>
    <managed-object-source name="ProductsSelected" source="net.officefloor.plugin.managedobject.clazz.ClassManagedObjectSource" object-type="net.officefloor.example.weborchestration.products.ProductsSelected" timeout="0" x="714" y="304">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.products.ProductsSelected"/>
      </properties>
    </managed-object-source>
  </managed-object-sources>
  <managed-objects>
    <managed-object name="HttpLoadProductsSelected" scope="PROCESS" x="475" y="242">
      <managed-object-source name="HttpLoadProductsSelected"/>
      <dependency name="SERVER_HTTP_CONNECTION" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection">
        <external-managed-object name="HTTP"/>
      </dependency>
      <dependency name="OBJECT" object-type="net.officefloor.example.weborchestration.products.ProductsSelected">
        <managed-object name="ProductsSelected"/>
      </dependency>
    </managed-object>
    <managed-object name="ProductsSelected" scope="PROCESS" x="679" y="263">
      <managed-object-source name="ProductsSelected"/>
    </managed-object>
  </managed-objects>
  <external-flows>
    <external-flow name="Displayed" argument-type="java.lang.Void" x="710" y="146"/>
    <external-flow name="Exception" argument-type="java.lang.Exception" x="701" y="96"/>
    <external-flow name="Selected" argument-type="java.lang.Void" x="736" y="184"/>
  </external-flows>
  <works>
    <work name="HttpTemplate-selectProducts.ofp" source="net.officefloor.plugin.socket.server.http.template.HttpTemplateWorkSource" x="308" y="408">
      <properties>
        <property name="template.path" value="net/officefloor/example/weborchestration/products/selectProducts.ofp"/>
        <property name="bean.Product" value="net.officefloor.example.weborchestration.products.ProductQuantity"/>
      </properties>
      <work-task name="Cancel">
        <task-object name="0" key="" object-type="net.officefloor.plugin.socket.server.http.template.RequestHandlerTask$RequestHandlerIdentifier" parameter="true">
        </task-object>
      </work-task>
      <work-task name="Product">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
        <task-object name="OBJECT" key="" object-type="net.officefloor.example.weborchestration.products.ProductQuantity" parameter="true">
        </task-object>
      </work-task>
      <work-task name="ProductsSelected">
        <task-object name="0" key="" object-type="net.officefloor.plugin.socket.server.http.template.RequestHandlerTask$RequestHandlerIdentifier" parameter="true">
        </task-object>
      </work-task>
      <work-task name="Tail">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
      </work-task>
      <work-task name="template">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
      </work-task>
    </work>
    <work name="ProductsDisplayer" source="net.officefloor.plugin.work.clazz.ClassWorkSource" x="209" y="191">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.products.ProductsDisplayer"/>
      </properties>
      <work-task name="displayProducts">
        <task-object name="ProductQuantity[]" key="" object-type="[Lnet.officefloor.example.weborchestration.products.ProductQuantity;" parameter="true">
        </task-object>
      </work-task>
      <work-task name="obtainProductQuantities">
      </work-task>
    </work>
    <work name="ProductsSelector" source="net.officefloor.plugin.work.clazz.ClassWorkSource" x="218" y="329">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.products.ProductsSelector"/>
      </properties>
      <work-task name="selectProducts">
        <task-object name="ProductsSelected" key="" object-type="net.officefloor.example.weborchestration.products.ProductsSelected" parameter="false">
          <managed-object name="HttpLoadProductsSelected"/>
        </task-object>
        <task-object name="HttpSessionObject" key="" object-type="net.officefloor.plugin.socket.server.http.session.object.HttpSessionObject" parameter="false">
          <external-managed-object name="CustomerSessionObject"/>
        </task-object>
      </work-task>
    </work>
  </works>
  <tasks>
    <task name="Product" public="false" work="HttpTemplate-selectProducts.ofp" task="Product" return-type="" x="446" y="130">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="ProductsSelected" public="false" work="HttpTemplate-selectProducts.ofp" task="ProductsSelected" return-type="" x="54" y="282">
      <next-task name="selectProducts"/>
    </task>
    <task name="Tail" public="false" work="HttpTemplate-selectProducts.ofp" task="Tail" return-type="" x="434" y="182">
      <next-external-flow name="Displayed"/>
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="display" public="true" work="HttpTemplate-selectProducts.ofp" task="template" return-type="" x="15" y="46">
      <next-task name="obtainProductQuantities"/>
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="displayProducts" public="false" work="ProductsDisplayer" task="displayProducts" return-type="" x="306" y="119">
      <task-flow name="displayProduct" key="" argument-type="net.officefloor.example.weborchestration.products.ProductQuantity">
        <task name="Product" link="PARALLEL"/>
      </task-flow>
      <next-task name="Tail"/>
    </task>
    <task name="obtainProductQuantities" public="false" work="ProductsDisplayer" task="obtainProductQuantities" return-type="[Lnet.officefloor.example.weborchestration.products.ProductQuantity;" x="140" y="119">
      <next-task name="displayProducts"/>
    </task>
    <task name="selectProducts" public="false" work="ProductsSelector" task="selectProducts" return-type="" x="226" y="277">
      <task-flow name="invalidInput" key="" argument-type="[Lnet.officefloor.example.weborchestration.products.ProductQuantity;">
        <task name="displayProducts" link="SEQUENTIAL"/>
      </task-flow>
      <next-external-flow name="Selected"/>
    </task>
  </tasks>
</desk>