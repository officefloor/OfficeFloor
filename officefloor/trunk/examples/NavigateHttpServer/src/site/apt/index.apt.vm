                                               -----------------------
                                             Navigate HTTP Server Example 
                                               -----------------------
					        Daniel Sagenschneider
                                               -----------------------

  <<Navigate Http Server Example>>

  This example demonstrates that a HTTP template is a section (implementation of {{{/apidocs/net/officefloor/compile/spi/section/source/SectionSource.html}SectionSource}} which is a functional building block of OfficeFloor) by navigating between two templates. 
  
Code

  The following is the <<<main>>> method configures the two HTTP templates and the links the navigation between the templates.

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/navigatehttpserver/NavigateHttpServer.java}

  
* TemplateOne

  The first template provides a link to navigate to the other template.

%{code-snippet|brush=xml|file=${basedir}/src/main/resources/TemplateOne.ofp}

  The link is handled by the backing method which in this case of navigating does nothing except provide the annotation to indicate what is the next task within the flow.

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/navigatehttpserver/TemplateOne.java}

  As the next task name is not a template method name nor name of a section it becomes an output to the HTTP template.  From the <<<main>>> method above, the output is configured to the input of the HTTP template.
  
  A section has named flow inputs and outputs that are linked together which is the mechanism by which OfficeFloor joins sections together as functional building blocks.  The reason for sections is to group tasks together to ease management of large numbers of tasks.  As sections can contain other sections, this provides simple means to effectively organise tasks of an application.

* TemplateTwo

  The second template submits to navigate to original template.

%{code-snippet|brush=xml|file=${basedir}/src/main/resources/TemplateTwo.ofp}

  Much like the first template the backing logic also navigates via annotation to an external flow.

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/navigatehttpserver/TemplateTwo.java}

  The above <<<main>>> main method has the external flow linked back to the first template.


Unit Test

  The unit test navigates between the templates.

%{code-snippet|brush-autodetect=1|id=test|file=${basedir}/src/test/java/net/officefloor/example/navigatehttpserver/NavigateHttpServerTest.java}

