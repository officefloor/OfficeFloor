<?xml version="1.0" encoding="UTF-8"?>
<!--
 *  Office Floor, Application Server
 *  Copyright (C) 2006 Daniel Sagenschneider
 *
 *  This program is free software; you can redistribute it and/or modify it under the terms 
 *  of the GNU General Public License as published by the Free Software Foundation; either 
 *  version 2 of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 *  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with this program; 
 *  if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 *  MA 02111-1307 USA
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="marshall">
		<xs:annotation>
			<xs:documentation>Root mapping Object to XML</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="attributes" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="value"/>
					<xs:element ref="object"/>
					<xs:element ref="type"/>
					<xs:element ref="collection"/>
					<xs:element ref="reference"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="element" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="attributes">
		<xs:annotation>
			<xs:documentation>Attributes for a particular object</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="attribute"/>
				<xs:element ref="traverse"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="attribute">
		<xs:annotation>
			<xs:documentation>Mapping of an object value to an Attribute</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="attribute" type="xs:string" use="required"/>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="isUseRaw" type="xs:boolean" use="optional" default="false"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="traverse">
		<xs:annotation>
			<xs:documentation>Obtains an object from the source object to specify attributes from</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="attribute"/>
				<xs:element ref="traverse"/>
			</xs:choice>
			<xs:attribute name="method" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="value">
		<xs:annotation>
			<xs:documentation>Mapping of an object value to a Value (ie &lt;element&gt;value&lt;/element&gt;)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="element" type="xs:string" use="required"/>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="isUseRaw" type="xs:boolean" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="object">
		<xs:annotation>
			<xs:documentation>Mapping of an object to XML</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="attributes" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="value"/>
					<xs:element ref="object"/>
					<xs:element ref="type"/>
					<xs:element ref="collection"/>
					<xs:element ref="reference"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="element" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="type">
		<xs:annotation>
			<xs:documentation>Mapping based on type to XML</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="item"/>
			</xs:sequence>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="element" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="collection">
		<xs:annotation>
			<xs:documentation>Mapping of a collection of objects to XML</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="item"/>
			</xs:sequence>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="element" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="item">
		<xs:annotation>
			<xs:documentation>Mapping of a particular type of object to XML</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="attributes" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="value"/>
					<xs:element ref="object"/>
					<xs:element ref="type"/>
					<xs:element ref="collection"/>
					<xs:element ref="reference"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="element" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="reference">
		<xs:annotation>
			<xs:documentation>Mapping by utilising another mapping (ie by reference).  Mainly used for recursion.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
