                                       ------------------
				             Welcome
				       ------------------
				      Daniel Sagenschneider
				       ------------------

  <<Welcome to OfficeFloor>>

  OfficeFloor is an Inversion of Control 2.0 implementation that focuses on dependency injection into methods rather than into objects and improves on existing dependency injection frameworks by letting you specify the Thread to execute the method - there by really adhering to the "Hollywood Principle" (don't call us, we "really" will call you).

So why another framework?
  
  Existing dependency injection frameworks typically restrict your threading design by assuming single thread of execution.  OfficeFloor removes this assumption so that you can have different Threads execute different functions of your application - something very useful since performance gains these days are occurring by parrallelising your applications with more CPU cores.  See OfficeFloor's {{{./core/officeframe/job-based-architecture.html}Job Based Architecture}} for more details.
  
  Further to this, OfficeFloor has been built from the ground up to use graphical configuration (it is one of the {{{./principles.html}principles}} behind OfficeFloor).  No longer should you be spending days maintaining long error prone XML configuration files.  OfficeFloor is {{{./eclipse/graphical-configuration.html}graphically configured}} to provide you visually rich configuration that enbles {{{./promote-good-design.html}promoting good designs}}.

  The following is an example of the graphical configuration of OfficeFloor within Eclipse:

[./images/screenshot.png] Example graphical configuration of OfficeFloor
  
Get going with OfficeFloor

  OfficeFloor (much like other frameworks) has initial learning curves to adopt.  Even though the graphical configuration of OfficeFloor is aimed at making development with OfficeFloor intuitive, the initial concepts still need to be understood.  Current work at the moment by the development team is to provide simple example uses of OfficeFloor to allow you easier understanding of both OfficeFloor's capabilities and how to start using OfficeFloor to build your applications.

  The following active tasks are providing this detail and this page will be updated shortly with their outcomes:

   * {{{http://sourceforge.net/tracker/?func=detail&aid=3120549&group_id=156349&atid=799429}Quick installation of OfficeFloor from Maven}}

   * {{{http://sourceforge.net/tracker/index.php?func=detail&aid=3109862&group_id=156349&atid=799429}HTTP template links implementated as object methods}}

  Once the above tasks are available, the examples will also be available within Eclipse (see {{{./eclipse.html}installing OfficeFloor within Eclipse}}) for making graphical configuration changes to the examples.

Find out more

  To find out more about OfficeFloor:

   * Watch the {{{./demo.html}Demo}}

   * Read about the {{{./architecture.html}Architecture}}

   * Understand the {{{./principles.html}Principles}}

   * Start using in {{{./eclipse.html}Eclipse}}

