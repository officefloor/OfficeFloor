<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.officefloor</groupId>
		<artifactId>officefloor</artifactId>
		<version>0.2.2</version>
	</parent>
	<groupId>net.officefloor.eclipse</groupId>
	<artifactId>eclipse</artifactId>
	<version>0.2.1</version>
	<packaging>pom</packaging>
	<name>Eclipse</name>
	<description>Eclipse plugins and features for OfficeFloor</description>
	<modules>
		<!-- Core eclipse functionality -->
		<module>plugins/net.officefloor.core</module>
		<module>plugins/net.officefloor.ui</module>
		<module>features/net.officefloor.feature</module>

		<!-- Plug-in eclipse functionality -->
		<module>plugins/net.officefloor.socket</module>
		<module>plugins/net.officefloor.jdbc</module>
		<module>plugins/net.officefloor.jndi</module>
		<module>plugins/net.officefloor.filingcabinet</module>
		<module>plugins/net.officefloor.demo</module>
		<module>features/net.officefloor.plugins.feature</module>

		<!-- Deploy to Update Site -->
		<module>update.site</module>
	</modules>
	<build>
		<plugins>
			<plugin>
				<!-- Ensure location of Eclipse install is provided -->
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-property</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>eclipse.install.dir</property>
									<message><![CDATA[
Missing property: 'eclipse.install.dir'

Please ensure property 'eclipse.install.dir' is specified in an external active profile. Its value should contain the directory path to where Eclipse is installed (eg C:\install).

Also ensure the 'startup.jar' is available in the installed directory. This may require coping and renaming from the plug-in.
                                   ]]></message>
								</requireProperty>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- All projects are PDEs -->
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<pde>true</pde>
				</configuration>
			</plugin>
			<plugin>
				<!-- Work around as PDE headless build not using linked resources -->
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>Provide dependencies for PDE headless build</id>
						<phase>process-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Allow compilation as PDE projects -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>pde-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<eclipseInstall>${eclipse.install.dir}</eclipseInstall>
					<!--  
					<antVerbose>true</antVerbose>
					-->
					<buildProperties>
						<javacSource>1.6</javacSource>
						<javacTarget>1.6</javacTarget>
					</buildProperties>
				</configuration>
				<executions>
					<execution>
						<!-- PDE clean also -->
						<id>clean-pde</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Skip tests compilation as requires PDE environment -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<!--
					Skip possibles tests (built via IDE) as requires PDE environment
				-->
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<!-- Full clean after PDE build -->
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}</directory>
							<includes>
								<include>*.jar</include>
								<include>*.zip</include>
								<include>javaCompiler...args</include>
								<include>build.xml</include>
								<include>assemble.net.officefloor.*.xml</include>
								<include>package.net.officefloor.*.xml</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<!-- OfficeFloor dependencies -->
		<dependency>
			<groupId>net.officefloor.core</groupId>
			<artifactId>officebuilding</artifactId>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
</project>