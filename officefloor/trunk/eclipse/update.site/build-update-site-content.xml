<project name="Generate P2 Content">

	<target name="build-update-site-content"
		description="Addition functionality on maven to generate p2 content of Eclipse update site">

		<!-- Ensure parameters passed in from maven -->
		<fail message="Must specify property BUILD_DIR" unless="BUILD_DIR" />
		<fail message="Must provide P2 launcher jar location" unless="P2_LAUNCH_JAR" />
		<fail message="Must provide OfficeFloor version" unless="OFFICE_FLOOR_VERSION" />

		<!-- Copy in site and mirror files from OfficeFloor project -->
		<copy file="${basedir}/../../src/site/resources/update/site.xml"
			tofile="${BUILD_DIR}/site.xml" />
		<copy file="${basedir}/../../src/site/resources/update/mirrors.xml"
			tofile="${BUILD_DIR}/mirrors.xml" />

		<!-- Organise features -->
		<delete dir="${BUILD_DIR}/features" />
		<mkdir dir="${BUILD_DIR}/features" />
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="features" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.feature" />
		</antcall>
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="features" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.plugins.feature" />
		</antcall>

		<!-- Organise plug-ins -->
		<delete dir="${BUILD_DIR}/plugins" />
		<mkdir dir="${BUILD_DIR}/plugins" />
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="plugins" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.core" />
		</antcall>
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="plugins" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.ui" />
		</antcall>
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="plugins" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.jdbc" />
		</antcall>
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="plugins" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.socket" />
		</antcall>
		<antcall target="moveArtifact">
			<param name="SUB_DIR" value="plugins" />
			<param name="MOVE_ARTIFACT_ID" value="net.officefloor.filingcabinet" />
		</antcall>
		
		<!-- Only keep the necessary raw files -->
		<delete>
			<fileset dir="${BUILD_DIR}">
				<exclude name="features/**" />
				<exclude name="plugins/**" />
				<exclude name="site.xml" />
				<exclude name="mirrors.xml" />
			</fileset>
		</delete>

		<!-- Condition/Repack plug-in jars -->
		<antcall target="repackArtifact">
			<param name="CONDITION_ARTIFACT_ID" value="net.officefloor.core" />
		</antcall>
		<antcall target="repackArtifact">
			<param name="CONDITION_ARTIFACT_ID" value="net.officefloor.ui" />
		</antcall>
		<antcall target="repackArtifact">
			<param name="CONDITION_ARTIFACT_ID" value="net.officefloor.jdbc" />
		</antcall>
		<antcall target="repackArtifact">
			<param name="CONDITION_ARTIFACT_ID" value="net.officefloor.socket" />
		</antcall>
		<antcall target="repackArtifact">
			<param name="CONDITION_ARTIFACT_ID" value="net.officefloor.filingcabinet" />
		</antcall>

		<!-- Generate the digest and pack.jar.gz files -->
		<echo>Generating digest.zip and *.jar.pack.gz files</echo>
		<java jar="${P2_LAUNCH_JAR}" fork="true" failonerror="true">
			<arg line="-application org.eclipse.update.core.siteOptimizer" />
			<arg line="-digestBuilder" />
			<arg line="-digestOutputDir=${BUILD_DIR}" />
			<arg line="-siteXML=${BUILD_DIR}/site.xml" />
			<arg line="-jarProcessor" />
			<arg line="-verbose" />
			<arg line="-pack" />
			<arg line="-outputDir ${BUILD_DIR}" />
			<arg line="${BUILD_DIR}" />
		</java>

		<!-- Generate the content.jar and artifacts.jar files -->
		<echo>Generating content.jar and artifacts.jar files</echo>
		<java jar="${P2_LAUNCH_JAR}" fork="true" failonerror="true">
			<arg
				line="-application org.eclipse.equinox.p2.metadata.generator.EclipseGenerator" />
			<arg line="-updateSite ${BUILD_DIR}" />
			<arg line="-site file:${BUILD_DIR}/site.xml" />
			<arg line="-metadataRepository file:${BUILD_DIR}" />
			<arg line="-metadataRepositoryName &quot;$OfficeFloor Update Site&quot;" />
			<arg line="-artifactRepository file:${BUILD_DIR}" />
			<arg line="-artifactRepositoryName &quot;OfficeFloor Artifacts&quot;" />
			<arg line="-compress" />
			<arg line="-reusePack200Files" />
			<arg line="-noDefaultUIs" />
		</java>
	</target>

	<!-- Private task to organise and name the raw jars -->
	<target name="moveArtifact">
		<fail message="Must specify artifact to move" unless="MOVE_ARTIFACT_ID" />
		<fail message="Must specify sub-directory to move artifact"
			unless="SUB_DIR" />
		<move file="${BUILD_DIR}/${MOVE_ARTIFACT_ID}-${OFFICE_FLOOR_VERSION}.jar"
			tofile="${BUILD_DIR}/${SUB_DIR}/${MOVE_ARTIFACT_ID}_${OFFICE_FLOOR_VERSION}.jar" />
	</target>

	<!-- Private task to condition/repack an artifact -->
	<target name="repackArtifact">
		<fail message="Must specify artifact to condition" unless="CONDITION_ARTIFACT_ID" />
		<java jar="${P2_LAUNCH_JAR}" fork="true" failonerror="true">
			<arg line="-application org.eclipse.update.core.siteOptimizer" />
			<arg line="-jarProcessor" />
			<arg line="-verbose" />
			<arg line="-processAll" />
			<arg line="-repack" />
			<arg line="-outputDir ${BUILD_DIR}/plugins" />
			<arg
				line="${BUILD_DIR}/plugins/${CONDITION_ARTIFACT_ID}_${OFFICE_FLOOR_VERSION}.jar" />
		</java>
	</target>

</project>