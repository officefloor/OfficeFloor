<desk>
  <external-managed-objects>
    <external-managed-object name="HTTP" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" x="730" y="405"/>
  </external-managed-objects>
  <managed-object-sources>
  </managed-object-sources>
  <managed-objects>
  </managed-objects>
  <external-flows>
    <external-flow name="Displayed" argument-type="java.lang.Void" x="782" y="49"/>
    <external-flow name="Exception" argument-type="java.lang.Exception" x="783" y="73"/>
  </external-flows>
  <works>
    <work name="HttpTemplate-initialState.ofp" source="net.officefloor.plugin.socket.server.http.template.HttpTemplateWorkSource" x="465" y="378">
      <properties>
        <property name="template.path" value="net/officefloor/example/weborchestration/initialstate/initialState.ofp"/>
        <property name="bean.template" value="net.officefloor.example.weborchestration.Customer"/>
        <property name="bean.Products" value="net.officefloor.example.weborchestration.Product"/>
      </properties>
      <work-task name="End">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
      </work-task>
      <work-task name="Products">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
        <task-object name="OBJECT" key="" object-type="net.officefloor.example.weborchestration.Product" parameter="true">
        </task-object>
      </work-task>
      <work-task name="template">
        <task-object name="SERVER_HTTP_CONNECTION" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
        <task-object name="OBJECT" key="" object-type="net.officefloor.example.weborchestration.Customer" parameter="true">
        </task-object>
      </work-task>
    </work>
    <work name="InitialStateDisplay" source="net.officefloor.plugin.work.clazz.ClassWorkSource" x="151" y="375">
      <properties>
        <property name="class.name" value="net.officefloor.example.weborchestration.initialstate.InitialStateDisplay"/>
      </properties>
      <work-task name="display">
        <task-object name="ServerHttpConnection" key="" object-type="net.officefloor.plugin.socket.server.http.ServerHttpConnection" parameter="false">
          <external-managed-object name="HTTP"/>
        </task-object>
      </work-task>
    </work>
  </works>
  <tasks>
    <task name="End" public="false" work="HttpTemplate-initialState.ofp" task="End" return-type="" x="364" y="262">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="Products" public="false" work="HttpTemplate-initialState.ofp" task="Products" return-type="" x="369" y="177">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="display" public="true" work="InitialStateDisplay" task="display" return-type="" x="152" y="39">
      <task-flow name="displayHeader" key="" argument-type="net.officefloor.example.weborchestration.Customer">
        <task name="template" link="PARALLEL"/>
      </task-flow>
      <task-flow name="displayProduct" key="" argument-type="net.officefloor.example.weborchestration.Product">
        <task name="Products" link="PARALLEL"/>
      </task-flow>
      <task-flow name="displayTail" key="" argument-type="">
        <task name="End" link="PARALLEL"/>
      </task-flow>
      <next-external-flow name="Displayed"/>
      <task-escalation escalation-type="java.lang.Exception">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
    <task name="template" public="false" work="HttpTemplate-initialState.ofp" task="template" return-type="" x="365" y="101">
      <task-escalation escalation-type="java.io.IOException">
        <external-flow name="Exception"/>
      </task-escalation>
    </task>
  </tasks>
</desk>