                                               -----------------------
                                        Servlet Filter Web Application Example 
                                               -----------------------
					        Daniel Sagenschneider
                                               -----------------------

  <<Servlet Filter Web Application Example>>

  This example demonstrates running the OfficeFloor web functionality within a JEE Servlet container.
    
  {{{http://sourceforge.net/projects/officefloor/files/maven/maven2/net/officefloor/example/ServletFilterWebApplication/${projectVersion}/ServletFilterWebApplication-${projectVersion}-project.zip/download}Download Example Source}}
  
Code

  The to utilise the OfficeFloor web functionality within a JEE Servlet container, {{{/apidocs/net/officefloor/plugin/servlet/OfficeFloorServletFilter.html}OfficeFloorServletFilter}} has been provided which provides the necessary hooks for running within a JEE Servlet container.  The following is an example configuration using the <<<Filter>>>:

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/servletfilterwebapplication/ExampleFilter.java}

  The above highlights the only method to be implemented which contains the configuration of the OfficeFloor web functionality.  The above configuration provides the following:
  
   * OfficeFloor dynamic web template available at the uri <<</template>>>
   
   * Rendering of a JSP (by the Servlet container) as response for a navigation link from the above web template
   
   * Utilising a class method, <<<example(...)>>>, to service the uri <<</class>>>
   
  For further explanation of the above OfficeFloor web functionality see the previous examples.
  
  The ability to link to Servlet container resources (e.g. JSPs, Servlets) is provided to allow introducing OfficeFloor web functionality to your applications without having to rewrite your existing JSPs/Servlets.  OfficeFloor web will quite happily co-exist with other frameworks within a Servlet container as it is configured as a Filter.  The following highlighted configuration provides the necessary configuration in the <<<web.xml>>> for running the above Filter within a Servlet container.

%{code-snippet|sh-params=highlight:[4,5,6,7,8,9,10,11]|brush-autodetect=1|file=${basedir}/src/main/webapp/WEB-INF/web.xml}

  For OfficeFloor web to effectively be used its Filter mapping should be to <<</*>>> so that it has the ability to intercept each request.  OfficeFloor will only service the requests it is configured for and will allow the Servlet container to process all remaining requests.

* Remaining Code  

  For completeness of the example the remaining code is included below.
  
** Template.ofp

%{code-snippet|brush=xml|file=${basedir}/src/main/resources/templates/Template.ofp}

** ExampleTemplateLogic

  Identifies that the <<<link>>> in the above template should be handled by <<<LINK>>> output which in the above configuration is mapped to a JSP.

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/servletfilterwebapplication/ExampleTemplateLogic.java}

** Template.jsp

%{code-snippet|brush=xml|file=${basedir}/src/main/webapp/Template.jsp}

** ExampleClass

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/servletfilterwebapplication/ExampleClass.java}

** MockHttpServlet

  Not part of the OfficeFloor web functionality but is included to know when a request is being serviced by the Servlet container (and not OfficeFloor).

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/main/java/net/officefloor/example/servletfilterwebapplication/MockHttpServlet.java}



Unit Test

  The unit test highlights the servicing of a request by:
  
   * Servlet container (for request not to be handled by OfficeFloor web as per its configuration)
  
   * OfficeFloor web dynamic template
   
   * Dynamic template link be serviced by a JSP from the Servlet container
   
   * Request being serviced by a class

%{code-snippet|brush-autodetect=1|id=example|file=${basedir}/src/test/java/net/officefloor/example/servletfilterwebapplication/ExampleIT.java}

