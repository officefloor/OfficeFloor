				       ------------------
				             Features
				       ------------------
				      Daniel Sagenschneider
				       ------------------
				       
  <<TODO: update feature listing>>
  
  <<TODO: include features from webfloor.org>>


  Mobile and web experiences are never the same and our opinion is that separate views (web pages) should be produced for both.  OfficeFloor allows for separate views to be developed that are backed by the same business functionality.  OfficeFloor even decides which view to use based on the user's browser information (TODO: thanks to WUFL for a great tool to aid in this).
  
  OfficeFloor will reflectively interrogate your POJO methods to identify the dependent objects and inject them when invoking the method with the desired thread.  The thread to execute the method can be derived from the dependent objects of the method, as they will indicate the type of functionality being undertaken by the method (e.g. has a database connection dependency meaning the method is likely to do blocking database calls).  This allows tuning your application, as for example you can have non-blocking functionality performed by a single thread while blocking functionality by thread pools.  OfficeFloor can even run from external thread pools by re-using the current thread, which is how OfficeFloor can be embedded within a Servlet Container (i.e. allowing the complete portability of the framework as it is no longer tied to specific threading models).  As long as you have a JVM you can run OfficeFloor.

  A POJO method is actually just one type of function (or TODO API link to Job as per the framework) and OfficeFrame provides the flexibility of various incarnations of a function.  The OfficeFloor dynamic HTML web page is actually an example of this as the content is split into sections where each section's contents are written as a function to the response.  Various plug-ins such as the dynamic HTML web page are available to OfficeFloor to ease your development efforts.  For now, we suggest for simplicity that you just think of a function as being a POJO method.
  
  OfficeFloor is an Inversion of Control 2.0 implementation that focuses on multi-threaded dependency injection into methods rather than into objects and improves on existing dependency injection frameworks by letting you specify the Thread to execute the method - thereby really adhering to the "Hollywood Principle" (don't call us, we "really" will call you).
  

  
Features

  * Combines the object oriented ease of programming with the multi-threaded performance of functional programming.

  * Provides both auto-wiring of dependencies and manual graphical configuration.

  * WoOF (Web on OfficeFloor - {{{http://webfloor.org}http://webfloor.org}}) provides simplified web application development that allows easy integration with WSYWIG web design tools.
  
  * JEE Servlet Filter that enables introducing OfficeFloor functionality to your existing applications without change.
  
  * Integration with frameworks such as Spring, Hibernate and GWT to simplify integrating OfficeFloor functionality into your existing applications.
  