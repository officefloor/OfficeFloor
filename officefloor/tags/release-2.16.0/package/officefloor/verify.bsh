// Script to verify the install pom.xml correctly installs OfficeFloor within the test

import java.io.*;

// Log verifying installation
System.out.println("Verifying install from basedir " + basedir.getAbsolutePath());

// Method to obtain a child directory
File getChildDirectory(File parent, String directoryName) {

	// Find the child directory
	File directory = null;
	for (File checkFile : parent.listFiles()) {
		if (checkFile.getName().startsWith(directoryName)) {
			directory = checkFile;
		}
	}
	if ( directory == null ) {
		throw new FileNotFoundException("Unable to find directory '" + directoryName + "' under parent directory " + basedir.getAbsolutePath());
	}
	return directory;
}

// Method to simplify verifying files exist
void verifyFileExists(String fileName, boolean isExecutable) {

	// Find the OfficeFloor extracted directory
	File targetDirectory = getChildDirectory(basedir, "target");
	File officeFloorReleaseDirectory = getChildDirectory(targetDirectory, "OfficeFloor-");
	File officeFloorDirectory = getChildDirectory(officeFloorReleaseDirectory, "OfficeFloor-");

	// Verify file exists
	System.out.print("    " + fileName);
	System.out.flush();
	File file = new File(officeFloorDirectory, fileName); 
	if ( !file.isFile() ) {
		throw new FileNotFoundException("Missing expected file: " + file.getName() + "  [" + file.getPath() + "]");
	}
	if ( isExecutable ) {
		if ( !file.canExecute() ) {
			throw new IOException("File must be executable: " + file.getName() + "  [" + file.getPath() + "]");
		}
		System.out.print(" (executable)");
	}
	System.out.println();
}

// Ensure various files are created for successful installation
verifyFileExists( "bin/officebuilding", true );
verifyFileExists( "bin/officefloor", true );
verifyFileExists( "config/OfficeFloor.properties", false );
verifyFileExists( "lib/classpath.properties", false );
// others but enough checked to ensure installation for test