				       ------------------
				      OfficeFloor Tutorials
				       ------------------
				      Daniel Sagenschneider
				       ------------------
               
OfficeFloor Tutorials
  
  Once you have installed the {{{../install.html}OfficeFloor Eclipse plug-ins}} you have the tools ready for the below tutorials.
  
  The tutorials are ordered so that each builds on the knowledge of the previous tutorials.  It is therefore best to work though them in order.

  The following tutorials cover developing OfficeFloor (WoOF) web applications.  The acronym <WoOF> standards for <Web on OfficeFloor>.  It is a set of prefabricated plug-ins for OfficeFloor that enables OfficeFloor to work as a high performance Web Application Server.  As you become more familiar with OfficeFloor, you will realise OfficeFloor is a very light weight and versatile plug-in application framework.

*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
|| Tutorial                                                    || Description                                               || Covered
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{../maven/woof-archetype/index.html}My first WoOF application}} | Walks through the simple steps to create and run an OfficeFloor (WoOF) web application. | {{{http://maven.apache.org}Maven}} and {{{http://eclipse.org}Eclipse}} plug-ins |
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./PrototypeHttpServer/index.html}Wireframe prototyping}}  | Build working web prototypes and then later extend into a working web application.  | #\{link\}
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./DynamicHttpServer/index.html}Dynamic web page}}         | Rendering dynamic content.                                 | $\{bean ... $\} , $\{property\}
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./InteractiveHttpServer/index.html}Interactive web page}} | Handling of requests to provide interactive pages.         | #\{link\} , @HttpParameters
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./NavigateHttpServer/index.html}Dynamic navigation between pages}}  | Controlling the navigation between pages.        | @NextFunction , @FlowInterface\
|                                                              |                                                            | (Continuation Injection)
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./SessionHttpServer/index.html}Session state}}            | Storing state between requests within the HTTP session.    | @HttpSessionStateful
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./ExceptionHttpServer/index.html}Exception handling}}     | Handling exceptions.                                       | @Parameter
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./RawHttpServer/index.html}Generating HTML}}              | Render generated HTML.                                     | @UnescapedHtml
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./JavaScriptApp/index.html}AJAX}}                         | Servicing AJAX requests from JavaScript.                   | @HttpObject , ObjectResponse , @NotRenderTemplateAfter
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./SectionHttpServer/index.html}Sectioning content}}       | Sectional rendering content.                               | \<!-- \{section\} --\>
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./InheritHttpServer/index.html}Template Inheritance}}     | Inheriting sectioned content.                              | \<!-- \{:override\} --\> , \<!-- \{!\} --\> 
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./SecurePageHttpServer/index.html}Secure Page}}           | Shows the ease of securing a page                          | Template Secure
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./SecureLinkHttpServer/index.html}Secure Link}}           | Demonstrates the ease of securing a link                   | Link Secure
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./AuthenticationHttpServer/index.html}Authentication}}    | Easy means to provide authentication                       | Authentication
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./DiPojoHttpServer/index.html}Dependency Injection (POJO)}} | Dependency injecting a plain old java object (POJO).     | Dependency Injection
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./DatabaseHttpServer/index.html}Dependency Injection (Managed Object)}} | Dependency injecting a customised managed object. | ManagedObjectSource
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./TeamHttpServer/index.html}Thread Injection}}            | Thread injection to performance tune the application.      | Thread Injection
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./RestHttpServer/index.html}REST}}                        | REST                                                       | REST , @PathParameter , HttpException
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./ThreadAffinityHttpServer/index.html}Thread Affinity}}   | Thread Affinity                                            | Executive
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./SpringHttpServer/index.html}Spring}}                    | Wiring in Spring beans                                     | Supplier
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./TransactionHttpServer/index.html}Transaction}}          | Managing transactions with Governance.                     | Governance
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./TestHttpServer/index.html}Test}}                        | Testing the application                                    | Unit / System / Integration testing
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
| {{{./DeployHttpServer/index.html}Deploy}}                    | Deploying the application                                  | Deploy , Docker
*--------------------------------------------------------------+------------------------------------------------------------+------------------------------+


~~ TODO include
~~ *--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
~~ || Tutorial                                                    || Description                                               || Covered
~~ *--------------------------------------------------------------+------------------------------------------------------------+------------------------------+
~~ | {{{./TransactionHttpServer/index.html}Governance}}  | Managing transactions with Governance.
~~ *----------------------------------------------------------+-----------------------------------------------------------+

