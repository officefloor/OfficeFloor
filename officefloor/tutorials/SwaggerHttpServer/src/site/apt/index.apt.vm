~~~
~~ #%L
~~ Swagger HTTP Server Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~

                                               -----------------------
                                              OpenAPI / Swagger Tutorial 
                                               -----------------------
					                            Daniel Sagenschneider
                                               -----------------------

OpenAPI / Swagger Tutorial

  This tutorial demonstrates using {{{https://www.openapis.org/}OpenAPI}} / {{{https://swagger.io/}Swagger}} to document available REST end points.

  The example application for this tutorial has the following configuration:
  
[./images/SwaggerHttpServer-configuration.png] SwaggerHttpServer configuration.
    
  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/SwaggerHttpServer}Tutorial Source}}
  

*Configuring OpenAPI / Swagger

  To configure OpenAPI / Swagger into an application, add the following to <<<pom.xml>>>
  
%{snippet|id=tutorial|file=${basedir}/pom.xml|ignoreDownloadError=false}

  This is all that is necessary.
  
  Once added the Swagger becomes available:
  
[./images/SwaggerHttpServer-swagger.png] SwaggerHttpServer swagger.


*Customising OpenAPI

  The defaults are generally adequate to document most applications.  However, if more control is required, the {{{/apidocs/net/officefloor/web/openapi/operation/OpenApiOperationExtensionServiceFactory.html}OpenApiOperationExtensionServiceFactory}} provides means to customise the OpenAPI.


Next

  The {{{../CorsHttpServer/index.html}next tutorial}} covers CORS.
