~~~
~~ #%L
~~ Secure link HTTP Server Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~

                                               -----------------------
                                                Secure Link Tutorial 
                                               -----------------------
                                                Daniel Sagenschneider
                                               -----------------------

Secure Link Tutorial
  
  This tutorial looks at configuring a specific link for a page to only be accessed via a secure channel (HTTPS).
  
  The below example for this tutorial will implement a simple non-secure page to provide login credentials via a secure link.  The simple page for this tutorial is as follows:
    
[./images/SecureLinkHttpServer-screenshot.png] SecureLinkHttpServer screen shot.
  
  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/SecureLinkHttpServer}Tutorial Source}}



*HTML

  The page template content is as follows.  Please note the link in the form action.

%{snippet|file=${basedir}/src/main/resources/template.woof.html|ignoreDownloadError=false}



*Secure Link

  To configure the link (form action) to always be communicated via a secure channel, the following is the configuration:
  
[./images/SecureLinkHttpServer-configuration.png] Secure Link configuration screen shot.

  Adding the link and flagging it secure will ensure WoOF renders the link URL on the page to communicate over a secure channel (HTTPS).  WoOF also prevents non-secure access to the link servicing by responding with a redirect to use a secure channel.
  
  The configuration of links also works in reverse.  Should the template be configured as secure, adding the link and leaving it unchecked indicates a non-secure link.  Note that unless configured, links will follow the template secure setting.



*Logic

  The logic for the page is the following:
  
%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/securelinkhttpserver/TemplateLogic.java|ignoreDownloadError=false}

  This tutorial shows sending information over a secure channel (HTTPS) from a non-secure page.



*Unit Test

  The unit test demonstrates the rendering of the secure link. 

%{snippet|id=tutorial|file=${basedir}/src/test/java/net/officefloor/tutorial/securelinkhttpserver/SecureLinkHttpServerTest.java}



Next

  The {{{../AuthenticationHttpServer/index.html}next tutorial}} looks at authentication.

