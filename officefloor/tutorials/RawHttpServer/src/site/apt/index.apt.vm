~~~
~~ #%L
~~ Raw HTTP Server Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~

                                               -----------------------
                                             Rendering Raw HTML Tutorial 
                                               -----------------------
                                                Daniel Sagenschneider
                                               -----------------------

Rendering Raw HTML Tutorial

  This tutorial demonstrates the rendering of raw HTML for a WoOF web application.
                                                                                                                          
  The example used in this tutorial is the following simple page:
  
[./images/RawHttpServer-screenshot.png] RawHttpServer screen shot.
    
  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/RawHttpServer}Tutorial Source}}



*Template.woof.html

  The HTML for the page is as follows:

%{snippet|file=${basedir}/src/main/resources/Template.woof.html|ignoreDownloadError=false}

  This is similar HTML to previous tutorials.



*TemplateLogic Class

  The logic for the rendering the page is the following POJO (plain old java object).
    
%{snippet|id=example|file=${basedir}/src/main/java/net/officefloor/tutorial/rawhttpserver/TemplateLogic.java|ignoreDownloadError=false}

  To generate HTML for the page and not have it automatically escaped by WoOF, annotate the property method with {{{/apidocs/net/officefloor/web/template/NotEscaped.html}@NotEscaped}}.  This informs WoOF to not escape the property value and render it as is.
  
  This is a very simple example.  More complex use of this would be presentation beans that provide dynamic generation of HTML.  Please however consider using the <<<$\{bean ... $\}>>> tag first before generating raw HTML, as the tag will provide the necessary functionality in the majority of cases.



Next

  The {{{../JavaScriptApp/index.html}next tutorial}} looks at serving AJAX requests.
