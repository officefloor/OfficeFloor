~~~
~~ #%L
~~ Spring Web MVC HTTP Server Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~

                                               -----------------------
                                          Migrate Spring Web MVC Tutorial 
                                               -----------------------
					                            Daniel Sagenschneider
                                               -----------------------

Migrate Spring Web MVC Tutorial

  This tutorial provides the typical steps in migrating a Spring Web MVC Controller to avoid dependency on Spring.  It also enables simpler code that can take advantage of all the OfficeFloor features.
   
  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/SpringWebMvcHttpServer}Tutorial Source}}



*Steps to migrate a Spring Web MVC Controller

  The Spring Web MVC Controller to be migrated is taken from the {{{./index.html}previous tutorial}}:

%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/springwebmvchttpserver/SpringRestController.java|ignoreDownloadError=false}

  To migrate a Spring Web MVC Controller:

   [[1]] Replace the Spring parameter annotations with WoOF annotations.
   
     * @PathVariable to {{{/apidocs/net/officefloor/web/HttpPathParameter.html}@HttpPathParameter}}

     * @RequestParam to {{{/apidocs/net/officefloor/web/HttpQueryParameter.html}@HttpQueryParameter}}

     * @RequestHeader to {{{/apidocs/net/officefloor/web/HttpHeaderParameter.html}@HttpHeaderParameter}}

     * @CookieValue to {{{/apidocs/net/officefloor/web/HttpCookieParameter.html}@HttpCookieParameter}}

     * @RequestBody to {{{/apidocs/net/officefloor/web/HttpObject.html}@HttpObject}}

   [[1]] Remove @ResponseBody and send response object to {{{/apidocs/net/officefloor/web/ObjectResponse.html}ObjectResponse}} parameter rather than returning it.
   
     * Note that can also continue to return object.  This object is then used as a parameter to the next linked procedure.

   [[1]] Any @PostContruct / @PreDestroy moved to {{{/apidocs/net/officefloor/frame/api/managedobject/source/ManagedObjectSource.html}ManagedObjectSource}} as injected object.
   
   [[1]] See {{{../TransactionHttpServer/index.html}Transaction Tutorial}} for graphically configuring transactions (removing need for Spring's @Transactional).
   
   [[1]] Remove the remaining Spring annotations.
         
   [[1]] Move dependencies to parameters of the method.

  The resulting migrated code is as follows:
  
%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/springwebmvchttpserver/migrated/MigratedRestController.java|ignoreDownloadError=false}


*Migrating a Spring web page

  The Spring web page is again taken from the {{{./index.html}previous tutorial}}:

%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/springwebmvchttpserver/SpringController.java|ignoreDownloadError=false}

%{snippet|file=${basedir}/src/main/resources/templates/simple.html|ignoreDownloadError=false}

  To migrate the web page, can either:
  
   * embed the rendering engine as a {{{/apidocs/net/officefloor/compile/spi/managedfunction/source/ManagedFunctionSource.html}ManagedFunctionSource}}

   * rewrite the web page as a WoOF template
   
  The rewritten WoOF logic object and template are as follows:
  
%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/springwebmvchttpserver/migrated/MigratedController.java|ignoreDownloadError=false}

%{snippet|file=${basedir}/src/main/resources/migrated/simple.woof.html|ignoreDownloadError=false}
  

Next

  The {{{../SpringWebFluxHttpServer/index.html}next tutorial}} covers migrating Spring Web Flux to WoOF.
