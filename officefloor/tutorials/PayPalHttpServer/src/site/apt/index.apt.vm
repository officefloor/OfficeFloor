~~~
~~ #%L
~~ PayPal Tutorial
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~

                                               -----------------------
                                                   PayPal Tutorial 
                                               -----------------------
					                            Daniel Sagenschneider
                                               -----------------------

PayPal Tutorial

  This tutorial demonstrates the ease of integrating PayPal to take payments.

  {{{https://github.com/officefloor/OfficeFloor/tree/master/officefloor/tutorials/PayPalHttpServer}Tutorial Source}}



*Server side PayPal

  The latest PayPal can be invoked completely from the client side.  This is very convenient, however still requires verifying the funds were appropriately captured on server side.
  
  To take more control and ensure the orders are not manipulated client side, the PayPal interaction can be done server side.  The {{{/apidocs/net/officefloor/pay/paypal/PayPalHttpClientManagedObjectSource.html}PayPalHttpClientManagedObjectSource}} provides the server side PayPal client.
  
  The two interactions required are:
  
   [[1]] Create the order
   
   [[1]] Capture funds for the order
   
  These interactions are the following:
  
%{snippet|id=create|file=${basedir}/src/main/java/net/officefloor/tutorial/paypalhttpserver/PayPalLogic.java|ignoreDownloadError=false}

%{snippet|id=capture|file=${basedir}/src/main/java/net/officefloor/tutorial/paypalhttpserver/PayPalLogic.java|ignoreDownloadError=false}

  See {{{https://developer.paypal.com}PayPal}} for further details.
  
  
  
*Configure PayPal

  The {{{/apidocs/net/officefloor/pay/paypal/PayPalHttpClientManagedObjectSource.html}PayPalHttpClientManagedObjectSource}} depends on a {{{/apidocs/net/officefloor/pay/paypal/PayPalConfigurationRepository.html}PayPalConfigurationRepository}} to provide the PayPal configuration.  This enables different implementations to pull from configuration, database, etc.
  
  For simplicity (and use your own PayPal accounts), this tutorial uses an in memory implementation configured by REST request.  The implementation is as follows:

%{snippet|id=tutorial|file=${basedir}/src/main/java/net/officefloor/tutorial/paypalhttpserver/InMemoryPayPalConfigurationRepository.java|ignoreDownloadError=false}

  with REST request to configure as follows:
  
%{snippet|id=configure|file=${basedir}/src/main/java/net/officefloor/tutorial/paypalhttpserver/PayPalLogic.java|ignoreDownloadError=false}
  


*Testing

  The following unit tests demonstrates the ability to mock PayPal for testing:
  
%{snippet|id=tutorial|file=${basedir}/src/test/java/net/officefloor/tutorial/paypalhttpserver/PayPalHttpServerTest.java|ignoreDownloadError=false}

  JUnit 4 example:

%{snippet|id=tutorial|file=${basedir}/src/test/java/net/officefloor/tutorial/paypalhttpserver/PayPalHttpServerJUnit4Test.java|ignoreDownloadError=false}



Next

  The {{{../SpringWebMvcHttpServer/index.html}next tutorial}} covers migrating Spring Web MVC to WoOF.
